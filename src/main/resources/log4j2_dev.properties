status = info
name = dev
# === root logger, collects all logs from the application ===
# sends all logs to rootConsole appender
rootLogger.appenderRef.rootConsole.ref = RootConsole
# uncomment the line below if you need to write to a file
#rootLogger.appenderRef.file.ref = FileLogger
# log collection level - INFO
rootLogger.level = info

# === properties used in the config ===
# path to the folder for recording logs
# ${sys:} <- mandatory, without this the logger will not understand that this is a system variable
property.log-path = ${sys:catalina.home}/logs/template_logs/
# setting up a display line for the “log level” of a specific log line
property.5p = %highlight{%-5p}{FATAL=white, ERROR=red, WARN=blue, INFO=black, DEBUG=green, TRACE=blue}
# log line prefix
property.d = %style{%d}{cyan}
# graylog server address
property.graylog-url = logs-test.petcorp.ru
# graylog server port
property.graylog-port = 7708

# === appenders - configuration HOW to write a log ===
# === parameters are provided as key:value  ===
# appender name
appender.rootConsole.type = Console
appender.rootConsole.name = RootConsole
# console output format
appender.rootConsole.layout.type = PatternLayout
appender.rootConsole.layout.pattern = %style{SYS}{Magenta}   ${d}  ${5p}  >>> [%c::%M] - %m%n
# logging level threshold, in this case, the root logger collects everything up to the info level,
# but we only output from the error level
appender.rootConsole.filter.threshold.type = ThresholdFilter
appender.rootConsole.filter.threshold.level = error

appender.cns.type = Console
appender.cns.name = ConsoleAppender
appender.cns.layout.type = PatternLayout
appender.cns.layout.pattern = %style{SYS}{Magenta}   ${d}  ${5p}  >>> [%c::%M] - %m%n

appender.c3p0.type = Console
appender.c3p0.name = C3P0Appender
appender.c3p0.layout.type = PatternLayout
appender.c3p0.layout.pattern = %style{C3P0}{Magenta}  ${d}  ${5p}  >>> [%c::%M] - %m%n

# uncomment below if you need to log to graylog
#appender.gelf.type = Gelf
#appender.gelf.name = GraylogAppender
#appender.gelf.host = ${graylog-url}
#appender.gelf.port = ${graylog-port}
## be sure to specify the facility as a regexp pattern - java*
#appender.gelf.facility = java-template
#appender.gelf.extractStackTrace = true
#appender.gelf.filterStackTrace = true
#appender.gelf.includeFullMdc = true
#appender.gelf.mdcProfiling = true

# uncomment below if you need to log to a file
#appender.file.type = File
#appender.file.name = FileLogger
#appender.file.fileName= ${log-path}template.log
#appender.file.layout.type = PatternLayout
#appender.file.layout.pattern = %style{SYS}{Magenta}   ${d}  ${5p}  >>> [%c::%M] - %m%n

# === loggers - filters for writing to the log ===
# logger.{logger_name}.name={package_which_will_be_logged}
logger.sql.name = com.mchange.v2
# logging level
logger.sql.level = info
# link to appender
# logger.{logger_name}.appenderRef.{appender_name}.ref={appender_name}
logger.sql.appenderRef.c3p0.ref=C3P0Appender

logger.main.name = ru.petshop
logger.main.level = debug
logger.main.appenderRef.cns.ref=ConsoleAppender
#logger.main.appenderRef.gelf.ref=GraylogAppender

